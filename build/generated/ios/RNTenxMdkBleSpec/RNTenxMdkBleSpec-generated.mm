/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleObjCpp
 *
 * We create an umbrella header (and corresponding implementation) here since
 * Cxx compilation in BUCK has a limitation: source-code producing genrule()s
 * must have a single output. More files => more genrule()s => slower builds.
 */

#import "RNTenxMdkBleSpec.h"


@implementation NativeTenxMdkBleSpecBase


- (void)setEventEmitterCallback:(EventEmitterCallbackWrapper *)eventEmitterCallbackWrapper
{
  _eventEmitterCallback = std::move(eventEmitterCallbackWrapper->_eventEmitterCallback);
}
@end


namespace facebook::react {
  
    static facebook::jsi::Value __hostFunction_NativeTenxMdkBleSpecJSI_scanLeDevice(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "scanLeDevice", @selector(scanLeDevice:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTenxMdkBleSpecJSI_connect(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "connect", @selector(connect:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTenxMdkBleSpecJSI_disconnect(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "disconnect", @selector(disconnect:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTenxMdkBleSpecJSI_discoverServicesAndCharacteristics(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "discoverServicesAndCharacteristics", @selector(discoverServicesAndCharacteristics:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTenxMdkBleSpecJSI_readCharacteristic(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "readCharacteristic", @selector(readCharacteristic:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTenxMdkBleSpecJSI_writeCharacteristic(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "writeCharacteristic", @selector(writeCharacteristic:value:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTenxMdkBleSpecJSI_setCharacteristicNotification(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "setCharacteristicNotification", @selector(setCharacteristicNotification:characteristicUUID:enabled:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTenxMdkBleSpecJSI_bondDevice(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "bondDevice", @selector(bondDevice:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTenxMdkBleSpecJSI_addListener(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, VoidKind, "addListener", @selector(addListener:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTenxMdkBleSpecJSI_removeListener(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, VoidKind, "removeListener", @selector(removeListener:), args, count);
    }

  NativeTenxMdkBleSpecJSI::NativeTenxMdkBleSpecJSI(const ObjCTurboModule::InitParams &params)
    : ObjCTurboModule(params) {
      
        methodMap_["scanLeDevice"] = MethodMetadata {1, __hostFunction_NativeTenxMdkBleSpecJSI_scanLeDevice};
        
        
        methodMap_["connect"] = MethodMetadata {1, __hostFunction_NativeTenxMdkBleSpecJSI_connect};
        
        
        methodMap_["disconnect"] = MethodMetadata {0, __hostFunction_NativeTenxMdkBleSpecJSI_disconnect};
        
        
        methodMap_["discoverServicesAndCharacteristics"] = MethodMetadata {0, __hostFunction_NativeTenxMdkBleSpecJSI_discoverServicesAndCharacteristics};
        
        
        methodMap_["readCharacteristic"] = MethodMetadata {1, __hostFunction_NativeTenxMdkBleSpecJSI_readCharacteristic};
        
        
        methodMap_["writeCharacteristic"] = MethodMetadata {2, __hostFunction_NativeTenxMdkBleSpecJSI_writeCharacteristic};
        
        
        methodMap_["setCharacteristicNotification"] = MethodMetadata {3, __hostFunction_NativeTenxMdkBleSpecJSI_setCharacteristicNotification};
        
        
        methodMap_["bondDevice"] = MethodMetadata {1, __hostFunction_NativeTenxMdkBleSpecJSI_bondDevice};
        
        
        methodMap_["addListener"] = MethodMetadata {1, __hostFunction_NativeTenxMdkBleSpecJSI_addListener};
        
        
        methodMap_["removeListener"] = MethodMetadata {1, __hostFunction_NativeTenxMdkBleSpecJSI_removeListener};
        
  }
} // namespace facebook::react
